name: Cypress running in parallel

on:
  workflow_dispatch:
    inputs: {}

defaults:
    run:
        shell: bash

jobs:
    cypress-paralel:
        strategy:
            matrix:
              split_index: [1, 2, 3]
        name: Cypress
        runs-on: ubuntu-latest
        steps:
        - name: Checkout
          uses: actions/checkout@v4

        - name: Docker GitHub auth
          uses: docker/login-action@v3
          with:
            registry: ghcr.io
            username: token
            password: ${{ secrets.WRITE_PACKAGES_TOKEN }}

        - name: Run copmose
          run: |
              docker compose up -d

        - uses: actions/setup-node@v4
          with:
            node-version: 20

        - name: Get npm cache directory
          id: npm-cache-dir
          shell: bash
          run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}

        - uses: actions/cache@v4
          id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
          with:
            path: ${{ steps.npm-cache-dir.outputs.dir }}
            key: split-${{ runner.name }}${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
            restore-keys: |
              ${{ runner.os }}-node-

        - run: npm i

        - name: Run cypress
          env:
            CYPRESS_SPLIT_INDEX: ${{ matrix.split_index }}
            CYPRESS_SPLIT: 3
            CYPRESS_NEXT_APP_URL: http://next-app:3000
            CYPRESS_SPEC: cypress/e2e/**/*.cy.ts
          run: |
              docker compose run --rm cypress

        - name: Upload reports' artifacts
          if: success() || failure()
          uses: actions/upload-artifact@v4
          with:
            name: cypress_parale_artifact_${{ matrix.split_index }}
            if-no-files-found: ignore
            path: ctrf/*.json
            retention-days: 1

    results:
        runs-on: ubuntu-latest
        if: always()
        needs: cypress-paralel
        steps:
          - uses: actions/checkout@v4

          - name: Download reports artifacts
            uses: actions/download-artifact@v4
            with:
              path: downloaded_artifacts

          - name: Publish CTRF Test Summary Results
            run: |
              ls -al downloaded_artifacts/cypress_parale_artifact_1
              mkdir -p ctrf
              cp -v downloaded_artifacts/*/*.json ctrf
              npx ctrf merge ctrf
              npx github-actions-ctrf summary ctrf/ctrf-report.json 
